name: CD / Helm upgrade
on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  IMAGE_REPO: v4n1ll4/springboot-demo

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - run: chmod +x ./gradlew
      - run: ./gradlew bootJar

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - id: meta
        run: echo "TAG=v$(date -u +%Y-%m-%d-%H-%M-%S)" >> $GITHUB_OUTPUT

      - name: Build & push image
        run: |
          docker build -t $IMAGE_REPO:${{ steps.meta.outputs.TAG }} .
          docker push  $IMAGE_REPO:${{ steps.meta.outputs.TAG }}

      # kubeconfig 없으면 뒤 단계 skip
      - name: Has kubeconfig?
        id: haskube
        run: |
          if [ -z "${{ secrets.KUBECONFIG }}" ]; then
            echo "present=false" >> $GITHUB_OUTPUT
          else
            echo "present=true" >> $GITHUB_OUTPUT
          fi

      - uses: azure/setup-kubectl@v3
        if: steps.haskube.outputs.present == 'true'

      - name: Set kubeconfig
        if: steps.haskube.outputs.present == 'true'
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      - uses: azure/setup-helm@v3
        if: steps.haskube.outputs.present == 'true'

      - name: Helm upgrade
        if: steps.haskube.outputs.present == 'true'
        run: |
          helm upgrade --install demo springboot-demo-chart \
            -f springboot-demo-chart/values.yaml \
            --set image.tag=${{ steps.meta.outputs.TAG }} \
            --namespace demo --create-namespace \
            --wait --timeout 300s

      - name: Wait for pods
        if: steps.haskube.outputs.present == 'true'
        run: kubectl wait pod -l app.kubernetes.io/name=springboot-demo -n demo --for=condition=ready --timeout=180s
